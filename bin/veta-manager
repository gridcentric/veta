#!/usr/bin/env python

# Copyright 2013 Gridcentric Inc.
# All Rights Reserved.
#
# Based off of the OpenStack nova-compute file
#
#    Licensed under the Apache License, Version 2.0 (the "License"); you may
#    not use this file except in compliance with the License. You may obtain
#    a copy of the License at
#
#         http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
#    License for the specific language governing permissions and limitations
#    under the License.

"""Starter script for Veta Backup manager."""

import eventlet
eventlet.monkey_patch()

import gettext
import os
import sys
import gc
import traceback
import greenlet
import signal

gettext.install('nova', unicode=1)

# If ../nova/__init__.py exists, add ../ to Python search path, so that
# it will override what happens to be installed in /usr/(local/)lib/python...
possible_topdir = os.path.normpath(os.path.join(os.path.abspath(sys.argv[0]),
                                   os.pardir,
                                   os.pardir))
if os.path.exists(os.path.join(possible_topdir, 'nova', '__init__.py')):
    sys.path.insert(0, possible_topdir)

from nova import config
from nova import service
from nova.openstack.common import log as logging
from oslo.config import cfg

if __name__ == '__main__':
    config.parse_args(sys.argv)
    opts = [
               cfg.StrOpt('veta_manager',
               default='veta.manager.VetaManager',
               help='Manager for veta-manager') ]
    cfg.CONF.register_opts(opts)

    logging.setup('nova')
    server = service.Service.create(binary='veta')
    service.serve(server)
    service.wait()
